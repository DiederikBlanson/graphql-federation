
schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
  
  
  
  
  
  
{
  query: Query
  
  
}


  directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

  directive @join__field(
    graph: join__Graph
    requires: join__FieldSet
    provides: join__FieldSet
    type: String
    external: Boolean
    override: String
    usedOverridden: Boolean
  ) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

  directive @join__graph(name: String!, url: String!) on ENUM_VALUE

  directive @join__implements(
    graph: join__Graph!
    interface: String!
  ) repeatable on OBJECT | INTERFACE

  directive @join__type(
    graph: join__Graph!
    key: join__FieldSet
    extension: Boolean! = false
    resolvable: Boolean! = true
    isInterfaceObject: Boolean! = false
  ) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

  directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

  scalar join__FieldSet


  directive @link(
    url: String
    as: String
    for: link__Purpose
    import: [link__Import]
  ) repeatable on SCHEMA

  scalar link__Import

  enum link__Purpose {
    """
    `SECURITY` features provide metadata necessary to securely resolve fields.
    """
    SECURITY

    """
    `EXECUTION` features provide metadata necessary for operation execution.
    """
    EXECUTION
  }







enum join__Graph {
  SERVICE_1 @join__graph(name: "Service 1", url: "http://localhost:8081/graphql") 
  SERVICE_2 @join__graph(name: "Service 2", url: "http://localhost:8082/graphql") 
}

scalar TransportOptions @join__type(graph: SERVICE_1)  @join__type(graph: SERVICE_2) 

type Query @join__type(graph: SERVICE_1)  @join__type(graph: SERVICE_2)  {
  user(id: ID!) : User @join__field(graph: SERVICE_1) 
}

type User @join__type(graph: SERVICE_1, key: "id")  @join__type(graph: SERVICE_2, key: "id", extension: true)  {
  id: ID!
  name: String @join__field(graph: SERVICE_1) 
  email: String @join__field(graph: SERVICE_2) 
}
    